{"ast":null,"code":"var _jsxFileName = \"/Users/lilCheri/Desktop/hw7/src/GameManager.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase/app';\n\nlet uniqid = require('uniqid');\n\nclass GameManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.themoviedb.org/3/movie/upcoming?api_key=ad1fdbb0dcebf0d1cf8ffbfd5c0eb777&language=en-US&page=1').then(res => res.json()).then(data => {\n      this.setState({\n        movies: data.results\n      });\n    });\n    this.authUnRegFunc = firebase.auth().onAuthStateChanged(firebaseUser => {\n      if (firebaseUser) {\n        this.setState({\n          user: firebaseUser,\n          loading: false\n        });\n      } else {\n        this.setState({\n          user: null,\n          loading: false\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.authUnRegFunc();\n  }\n\n  generateRoomId() {\n    return uniqid();\n  }\n\n  handleCreateRoom(organizer, category, settings) {\n    this.setState({\n      errorMessage: null\n    });\n    let uid = this.generateRoomId();\n    firebase.auth().createUserWithEmailAndPassword(uid + '@whateverdomain.com', uid).then(firebaseUser => {\n      let user = firebase.auth().currentUser;\n      let promise = user.updateProfile({\n        displayName: handle\n      });\n      return promise;\n    }).then(() => console.log(\"done\")).catch(error => {\n      this.setState({\n        errorMessage: error.message\n      });\n    });\n    let roomId = this.generateRoomId();\n    let roomRef = firebase.database().ref('Rooms').push();\n    roomRef.set({\n      roomId: roomId,\n      room_name: \"Room \" + roomId,\n      organizer: organizer,\n      category: category,\n      settings: settings\n    });\n  }\n\n  handleJoin(player, id) {}\n\n  render() {\n    // Dummy test\n    this.createRoom(\"Marie\", \"sports\", {\n      Analysis: true,\n      Timer: 60\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Coming Soon!\");\n  }\n\n}\n\nexport default GameManager;","map":{"version":3,"sources":["/Users/lilCheri/Desktop/hw7/src/GameManager.js"],"names":["React","Component","firebase","uniqid","require","GameManager","constructor","props","state","loading","componentDidMount","fetch","then","res","json","data","setState","movies","results","authUnRegFunc","auth","onAuthStateChanged","firebaseUser","user","componentWillUnmount","generateRoomId","handleCreateRoom","organizer","category","settings","errorMessage","uid","createUserWithEmailAndPassword","currentUser","promise","updateProfile","displayName","handle","console","log","catch","error","message","roomId","roomRef","database","ref","push","set","room_name","handleJoin","player","id","render","createRoom","Analysis","Timer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport firebase from 'firebase/app';\nlet uniqid = require('uniqid');\n\nclass GameManager extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false\n        }\n    }\n\n     componentDidMount() {\n        fetch('https://api.themoviedb.org/3/movie/upcoming?api_key=ad1fdbb0dcebf0d1cf8ffbfd5c0eb777&language=en-US&page=1')\n            .then((res) => res.json())\n            .then((data) => {\n                this.setState({ movies: data.results });\n            });\n\n        this.authUnRegFunc = firebase.auth().onAuthStateChanged((firebaseUser) => {\n            if (firebaseUser) {\n                this.setState({ user: firebaseUser, loading: false });\n            } else {\n                this.setState({ user: null, loading: false });\n            }\n        });\n    }\n    \n    componentWillUnmount() {\n        this.authUnRegFunc();\n    }\n\n    generateRoomId() {\n        return uniqid();\n    }\n\n    handleCreateRoom(organizer, category, settings) {\n        this.setState({ errorMessage: null });\n\n        let uid = this.generateRoomId()\n        firebase.auth().createUserWithEmailAndPassword(uid + '@whateverdomain.com', uid)\n            .then((firebaseUser) => {\n                let user = firebase.auth().currentUser;\n                let promise = user.updateProfile({\n                    displayName: handle,\n                })\n                return promise;\n            })\n            .then(() => console.log(\"done\"))\n            .catch((error) => {\n                this.setState({ errorMessage: error.message });\n            })\n\n\n        let roomId = this.generateRoomId();\n        let roomRef = firebase.database().ref('Rooms').push();\n        \n        roomRef.set({\n            roomId: roomId,\n            room_name: \"Room \" + roomId,\n            organizer: organizer,\n            category: category,\n            settings: settings\n        });\n    }\n\n    handleJoin(player, id) {\n\n    }\n\n    render() {\n        // Dummy test\n        this.createRoom(\"Marie\", \"sports\", {Analysis:true , Timer: 60});\n\n        return(\n            <div>\n                Coming Soon!\n            </div>\n        );\n    }\n}\n\nexport default GameManager;"]},"metadata":{},"sourceType":"module"}