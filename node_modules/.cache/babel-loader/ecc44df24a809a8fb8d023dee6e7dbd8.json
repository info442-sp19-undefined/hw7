{"ast":null,"code":"var _jsxFileName = \"/Users/Jinc/Desktop/hw7/src/GameManager.js\";\nimport React, { Component } from \"react\";\nimport firebase from \"firebase/app\";\nimport './css/room.css';\nimport { Input, InputGroup, InputGroupAddon, Label, Button, Col, Row, Form, Modal, ModalHeader, ModalFooter } from \"reactstrap\";\nimport { Redirect } from 'react-router-dom';\n\nconst questionFile = require(\"./questions.json\");\n\nconst MAX_QUESTIONS = 15;\nconst MIN_QUESTIONS = 1;\nexport class GameManager extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      // Check the inputs are valid\n      if (this.isValid(e.target.value, e.target.name)) {\n        // Remove Error message\n        document.getElementById('fname').style.borderColor = \"white\";\n        document.getElementById('error').style.visibility = \"hidden\";\n        let str = e.target.value.replace(/ /g, '_');\n        this.setState({\n          [e.target.name]: str\n        });\n      } else if (e.target.name === 'numQuestions') {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n      } else {\n        this.setState({\n          fname: \"\"\n        });\n        e.target.value = \"\";\n        document.getElementById('error').innerHTML = \"Please enter a correct name without symbols.\";\n        document.getElementById('error').style.visibility = \"visible\";\n        document.getElementById('fname').style.borderColor = \"red\";\n      }\n    };\n\n    this.onClick = e => {\n      this.setState({\n        [e.target.name]: e.target.checked\n      });\n    };\n\n    this.state = {\n      fname: \"First Name\",\n      uid: \"\",\n      roomName: \"\",\n      numQuestions: 5,\n      toggleAnalysis: false,\n      created: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.handleCreateRoom = this.handleCreateRoom.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      uid: this.props.data.uid,\n      roomName: \"Room-\" + this.props.data.uid\n    });\n  }\n\n  handleCreateRoom() {\n    let roomRef = firebase.database().ref(\"Rooms\").child(this.state.uid);\n    roomRef.set({\n      organizer: this.state.fname,\n      uid: this.state.uid,\n      room_name: this.state.roomName,\n      settings: {\n        Number_Questions: this.state.numQuestions,\n        showAnalysis: this.state.toggleAnalysis\n      }\n    });\n    this.setState({\n      created: true\n    });\n  }\n\n  isValid(str, field) {\n    if (field === 'fname' && /^[a-zA-Z ]+$/.test(str)) {\n      return true;\n    } else if (field === 'roomName') {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    let isEnabled = this.state.fname !== \"\";\n    let button = null;\n\n    if (this.state.created) {\n      return React.createElement(Redirect, {\n        push: true,\n        to: {\n          pathname: \"/\" + this.state.roomName + \"/Categories/\",\n          state: this.state\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      });\n    } else {\n      button = React.createElement(Button, {\n        onClick: this.handleCreateRoom,\n        disabled: !isEnabled,\n        style: {\n          fontSize: \"18px\",\n          borderRadius: \"20px\",\n          width: \"200px\",\n          height: \"2em\",\n          background: \"#226597\",\n          color: \"white\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          padding: \"0px\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          marginTop: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Create Room\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"error\",\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      style: {\n        visibility: \"hidden\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Form, {\n      id: \"newRoom-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Settings\"), React.createElement(Label, {\n      style: {\n        marginTop: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \" Organizer Name \"), React.createElement(Input, {\n      placeholder: this.state.fname,\n      name: \"fname\",\n      onChange: this.handleChange,\n      id: \"fname\",\n      style: {\n        width: \"300px\",\n        borderRadius: \"20px\",\n        paddingLeft: \"24px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Label, {\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Custom Room Name\"), React.createElement(Input, {\n      placeholder: this.state.roomName,\n      name: \"roomName\",\n      onChange: this.handleChange,\n      id: \"roomName\",\n      style: {\n        width: \"300px\",\n        borderRadius: \"20px\",\n        paddingLeft: \"24px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(Label, {\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Number of Icebreaker Questions\"), React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: this.state.numQuestions,\n      name: \"numQuestions\",\n      min: MIN_QUESTIONS,\n      max: MAX_QUESTIONS,\n      type: \"number\",\n      step: \"1\",\n      defaultValue: 5,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(InputGroupAddon, {\n      addonType: \"append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Questions\")), React.createElement(Label, {\n      check: true,\n      style: {\n        marginTop: \"30px\",\n        marginLeft: \"40px\",\n        fontSize: \"16px\",\n        color: \"#226597\",\n        fontWeight: \"600\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"toggleAnalysis\",\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), \" Show Analysis\"), button));\n  }\n\n}\nexport class Categories extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setQuestionDeck = e => {\n      let category = e.target.id;\n\n      if (category !== 'random' || category !== 'customized') {\n        let deck = this.getQuestions(category);\n\n        if (deck !== undefined) {\n          this.setState({\n            questions: deck\n          });\n        } else {\n          alert(\"An error occured while finding the questions, please try again later or contact the owner of the website\");\n        }\n      } else {\n        this.setState({\n          custom: true\n        });\n      }\n    };\n\n    this.state = {\n      questions: [],\n      custom: false\n    };\n    this.setQuestionDeck = this.setQuestionDeck.bind(this);\n    this.handleRandomDeck = this.handleRandomDeck.bind(this);\n    this.parentState = this.props.location.state;\n  }\n\n  componentDidMount() {\n    // Check file whether file is empty\n    if (questionFile.length === 0) {\n      alert(\"An error occured while finding the questions, please try again later or contact the owner of the website\");\n    }\n  }\n\n  getQuestions(category) {\n    for (let questionSet of questionFile) {\n      if (questionSet.category === category) {\n        return questionSet.questions;\n      }\n    }\n\n    return undefined;\n  }\n\n  handleRandomDeck() {\n    let max = this.parentState.numQuestions;\n    let randomIndex = Math.floor(Math.random() * MAX_QUESTIONS);\n    let deck = [];\n\n    if (max <= 7) {\n      for (let category of questionFile) {\n        let currentPos = 0;\n\n        for (let question in category.questions) {\n          if (currentPos === randomIndex) {\n            deck.push(question);\n            break;\n          }\n\n          currentPos++;\n        } // Check that the deck has reach the max\n\n\n        if (deck.length === max) {\n          console.log(deck);\n          this.setState({\n            questions: deck\n          });\n          break;\n        }\n      }\n    }\n  }\n\n  render() {\n    let isEnabled = this.state.questions.length !== 0;\n    return React.createElement(\"div\", {\n      id: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Categories\"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cata\",\n      onClick: this.setQuestionDeck,\n      id: \"travel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"cataimg\",\n      onClick: this.setQuestionDeck,\n      src: require(\"./icons/travel.png\"),\n      id: \"travel\",\n      alt: \"travel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Travel\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cata\",\n      onClick: this.setQuestionDeck,\n      id: \"food\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"cataimg\",\n      onClick: this.setQuestionDeck,\n      src: require(\"./icons/food.png\"),\n      id: \"food\",\n      alt: \"food\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Food\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cata\",\n      onClick: this.setQuestionDeck,\n      id: \"sports\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"cataimg\",\n      onClick: this.setQuestionDeck,\n      src: require(\"./icons/sports.png\"),\n      id: \"sports\",\n      alt: \"sports\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Sports\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cata\",\n      onClick: this.setQuestionDeck,\n      id: \"music\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"cataimg\",\n      onClick: this.setQuestionDeck,\n      src: require(\"./icons/music.png\"),\n      id: \"music\",\n      alt: \"music\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Music\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cata\",\n      onClick: this.setQuestionDeck,\n      id: \"movies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"cataimg\",\n      onClick: this.setQuestionDeck,\n      src: require(\"./icons/movie.png\"),\n      id: \"movies\",\n      alt: \"movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"Movies\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cata\",\n      onClick: this.setQuestionDeck,\n      id: \"books\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"cataimg\",\n      onClick: this.setQuestionDeck,\n      src: require(\"./icons/book.png\"),\n      id: \"books\",\n      alt: \"book\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Books\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cata\",\n      onClick: this.setQuestionDeck,\n      id: \"animals\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"cataimg\",\n      onClick: this.setQuestionDeck,\n      src: require(\"./icons/animal.png\"),\n      id: \"animals\",\n      alt: \"animal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"Animals\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cata\",\n      onClick: this.handleRandomDeck,\n      id: \"random\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"cataimg\",\n      onClick: this.handleRandomDeck,\n      src: require(\"./icons/random.png\"),\n      id: \"random\",\n      alt: \"random\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"Random\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cata\",\n      onClick: this.setQuestionDeck,\n      id: \"customized\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"cataimg\",\n      onClick: this.setQuestionDeck,\n      src: require(\"./icons/customized.png\"),\n      id: \"customized\",\n      alt: \"customized\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Custom\"))), React.createElement(ModalQuestions, {\n      questionList: this.state.questions,\n      max: this.parentState.numQuestions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(Button, {\n      href: \"/Room\",\n      disabled: isEnabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"Go to Room\"));\n  }\n\n}\n\nclass ModalQuestions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      questionNumber: 0\n    };\n    this.toggle = this.toggle.bind(this);\n    this.nextQuestion = this.nextQuestion.bind(this);\n  } // this.props.max is the max number of questions\n  // this.props.questionList is the list of questions to display\n\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  nextQuestion() {\n    console.log(\"did the question number increase?\");\n    console.log(this.state.questionNumber);\n    let num = this.state.questionNumber;\n    this.setState({\n      questionNumber: num + 1\n    });\n    console.log(this.state.questionNumber);\n  }\n\n  render() {\n    if (this.props.questionList.length !== 0) {\n      const entries = Object.entries(this.props.questionList);\n      let displayQuestion = entries[this.state.questionNumber];\n      let displayQuestionModal = displayQuestion[this.state.questionNumber];\n      let values = Object.values(this.props.questionList);\n      let displayButton = values[this.state.questionNumber];\n      let displayButton1 = displayButton[this.state.questionNumber];\n      let displayButton2 = displayButton[this.state.questionNumber + 1];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"danger\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, this.props.buttonLabel), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, displayQuestionModal), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, displayButton1), ' ', React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, displayButton2), ' ', React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.nextQuestion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"Next Question\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"Cancel\"))));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, \"Organizer has not posted question yet\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/Jinc/Desktop/hw7/src/GameManager.js"],"names":["React","Component","firebase","Input","InputGroup","InputGroupAddon","Label","Button","Col","Row","Form","Modal","ModalHeader","ModalFooter","Redirect","questionFile","require","MAX_QUESTIONS","MIN_QUESTIONS","GameManager","constructor","props","handleChange","e","isValid","target","value","name","document","getElementById","style","borderColor","visibility","str","replace","setState","fname","innerHTML","onClick","checked","state","uid","roomName","numQuestions","toggleAnalysis","created","bind","handleCreateRoom","componentDidMount","data","roomRef","database","ref","child","set","organizer","room_name","settings","Number_Questions","showAnalysis","field","test","render","isEnabled","button","pathname","fontSize","borderRadius","width","height","background","color","display","justifyContent","padding","marginLeft","marginRight","marginTop","paddingLeft","fontWeight","Categories","setQuestionDeck","category","id","deck","getQuestions","undefined","questions","alert","custom","handleRandomDeck","parentState","location","length","questionSet","max","randomIndex","Math","floor","random","currentPos","question","push","console","log","ModalQuestions","modal","questionNumber","toggle","nextQuestion","prevState","num","questionList","entries","Object","displayQuestion","displayQuestionModal","values","displayButton","displayButton1","displayButton2","buttonLabel","className"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport firebase from \"firebase/app\";\nimport './css/room.css';\nimport {\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    Label,\n    Button,\n    Col,\n    Row,\n    Form,\n    Modal,\n    ModalHeader,\n    ModalFooter\n} from \"reactstrap\";\nimport { Redirect } from 'react-router-dom';\nconst questionFile = require(\"./questions.json\");\nconst MAX_QUESTIONS = 15;\nconst MIN_QUESTIONS = 1;\nexport class GameManager extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fname: \"First Name\",\n            uid: \"\",\n            roomName: \"\",\n            numQuestions: 5,\n            toggleAnalysis: false,\n            created: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.handleCreateRoom = this.handleCreateRoom.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({ uid: this.props.data.uid, roomName: \"Room-\" + this.props.data.uid });\n    }\n\n    handleCreateRoom() {\n        let roomRef = firebase.database().ref(\"Rooms\").child(this.state.uid);\n        roomRef.set({\n            organizer: this.state.fname,\n            uid: this.state.uid,\n            room_name: this.state.roomName,\n            settings: {\n                Number_Questions: this.state.numQuestions,\n                showAnalysis: this.state.toggleAnalysis\n            }\n        });\n        this.setState({ created: true });\n    }\n\n    isValid(str, field) {\n        if ( field === 'fname' && /^[a-zA-Z ]+$/.test(str)) {\n          return true;\n        } else if (field === 'roomName') {\n            return true;\n        } \n        return false;\n    }\n    \n    handleChange = (e) => {\n        // Check the inputs are valid\n        if (this.isValid(e.target.value, e.target.name)) {\n            // Remove Error message\n            document.getElementById('fname').style.borderColor = \"white\";\n            document.getElementById('error').style.visibility = \"hidden\";\n\n            let str = e.target.value.replace(/ /g, '_');\n            this.setState({\n                [e.target.name]: str\n            });\n        } else if(e.target.name === 'numQuestions') {\n            this.setState({\n                [e.target.name]: e.target.value\n            });\n        } else {\n            this.setState({ fname: \"\" });\n            e.target.value = \"\";\n            document.getElementById('error').innerHTML = \"Please enter a correct name without symbols.\";\n            document.getElementById('error').style.visibility = \"visible\";\n            document.getElementById('fname').style.borderColor = \"red\";\n        }\n    }\n\n    onClick = (e) => {\n        this.setState({\n            [e.target.name]: e.target.checked\n        });\n    }\n\n    render() {\n        let isEnabled = (this.state.fname !== \"\");\n        let button = null;\n        if (this.state.created) {\n            return <Redirect push to={{pathname: \"/\" + this.state.roomName + \"/Categories/\", state: this.state}} />;\n        } else {\n            button = (\n                <Button\n                    onClick={this.handleCreateRoom}\n                    disabled={!isEnabled}\n                    style={{\n                        fontSize: \"18px\",\n                        borderRadius: \"20px\",\n                        width: \"200px\",\n                        height: \"2em\",\n                        background: \"#226597\",\n                        color: \"white\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        padding: \"0px\",\n                        marginLeft: \"auto\",\n                        marginRight: \"auto\",\n                        marginTop: \"50px\"\n                    }} >\n                    Create Room\n                </ Button>\n            )\n        }\n\n        return (\n            <div>\n                <div id=\"error\"\n                    className=\"alert alert-danger\"\n                    role=\"alert\"\n                    style={{ visibility: \"hidden\" }}>\n                </div>\n                <Form id=\"newRoom-form\">\n                    <h1 className=\"header\">Settings</h1>\n                    <Label style={{marginTop: \"40px\"}}> Organizer Name </Label>\n                    <Input \n                        placeholder={this.state.fname} \n                        name=\"fname\" \n                        onChange={this.handleChange} \n                        id=\"fname\" \n                        style={{ width: \"300px\", borderRadius: \"20px\", paddingLeft: \"24px\" }} \n                    />\n                    <Label style={{marginTop: \"20px\"}}>Custom Room Name</Label>\n                    <Input   \n                        placeholder={this.state.roomName} \n                        name=\"roomName\" \n                        onChange={this.handleChange} \n                        id=\"roomName\" \n                        style={{ width: \"300px\", borderRadius: \"20px\", paddingLeft: \"24px\" }} \n                    />\n                    <Label style={{ marginTop: \"20px\" }}>Number of Icebreaker Questions</Label>\n                    <InputGroup>\n                        <Input\n                            placeholder={this.state.numQuestions}\n                            name=\"numQuestions\"\n                            min={MIN_QUESTIONS}\n                            max={MAX_QUESTIONS}\n                            type=\"number\"\n                            step=\"1\"\n                            defaultValue={5}\n                            onChange={this.handleChange}\n                        />\n                        <InputGroupAddon addonType=\"append\">Questions</InputGroupAddon>\n                     </InputGroup>\n                    <Label check style={{marginTop: \"30px\", marginLeft: \"40px\", fontSize: \"16px\", color: \"#226597\", fontWeight: \"600\"}}>\n                        <input type=\"checkbox\" \n                            name=\"toggleAnalysis\" \n                            onClick={this.onClick} \n                        /> Show Analysis\n                    </Label>\n                    {button}\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport class Categories extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            questions: [],\n            custom: false\n        }\n        this.setQuestionDeck = this.setQuestionDeck.bind(this);\n        this.handleRandomDeck = this.handleRandomDeck.bind(this);\n        this.parentState = this.props.location.state;\n    }\n\n    componentDidMount() {\n        // Check file whether file is empty\n        if (questionFile.length === 0) {\n            alert(\"An error occured while finding the questions, please try again later or contact the owner of the website\");\n        }\n    }\n\n    setQuestionDeck = (e) => {\n        let category = e.target.id;\n        if (category !== 'random' || category !== 'customized') {\n            let deck = this.getQuestions(category);\n            if (deck !== undefined) {\n                this.setState({\n                    questions: deck\n                });\n            } else {\n                alert(\"An error occured while finding the questions, please try again later or contact the owner of the website\");\n            }\n        } else {\n            this.setState({ custom: true });\n        }\n    }\n\n    getQuestions(category) {\n        for (let questionSet of questionFile) {\n            if (questionSet.category === category) {\n                return questionSet.questions;\n            }\n        }\n        return undefined;\n    }\n\n    handleRandomDeck() {\n        let max = this.parentState.numQuestions;\n        let randomIndex = Math.floor(Math.random() * MAX_QUESTIONS);\n        let deck = [];\n\n        if( max <= 7 ) {\n            for(let category of questionFile) {\n                let currentPos = 0;\n                for(let question in category.questions) {\n                    if(currentPos === randomIndex) {\n                        deck.push(question);\n                        break;\n                    }\n                    currentPos++;\n                }\n                // Check that the deck has reach the max\n                if(deck.length === max) {\n                    console.log(deck)\n                    this.setState({\n                        questions: deck\n                    });\n                    break;\n                }\n            }\n        }\n    }\n\n    render() {\n        let isEnabled = (this.state.questions.length !== 0);\n        return (\n            <div id=\"category\">\n                <h1>Categories</h1>\n                <Row>\n                    <Col>\n                        <div className=\"cata\" onClick={this.setQuestionDeck} id=\"travel\">\n                            <img className=\"cataimg\" onClick={this.setQuestionDeck} src={require(\"./icons/travel.png\")} id=\"travel\" alt=\"travel\" />\n                        </div>\n                        <h3>Travel</h3>\n                    </Col>\n                    <Col>\n                        <div className=\"cata\" onClick={this.setQuestionDeck} id=\"food\">\n                            <img className=\"cataimg\" onClick={this.setQuestionDeck} src={require(\"./icons/food.png\")} id=\"food\" alt=\"food\" />\n                        </div>\n                        <h3>Food</h3>\n                    </Col>\n                    <Col>\n                        <div className=\"cata\" onClick={this.setQuestionDeck} id=\"sports\">\n                            <img className=\"cataimg\" onClick={this.setQuestionDeck} src={require(\"./icons/sports.png\")} id=\"sports\" alt=\"sports\" />\n                        </div>\n                        <h3>Sports</h3>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <div className=\"cata\" onClick={this.setQuestionDeck} id=\"music\">\n                            <img className=\"cataimg\" onClick={this.setQuestionDeck} src={require(\"./icons/music.png\")} id=\"music\" alt=\"music\" />\n                        </div>\n                        <h3>Music</h3>\n                    </Col>\n                    <Col>\n                        <div className=\"cata\" onClick={this.setQuestionDeck} id=\"movies\">\n                            <img className=\"cataimg\" onClick={this.setQuestionDeck} src={require(\"./icons/movie.png\")} id=\"movies\" alt=\"movie\" />\n                        </div>\n                        <h3>Movies</h3>\n                    </Col>\n                    <Col>\n                        <div className=\"cata\" onClick={this.setQuestionDeck} id=\"books\">\n                            <img className=\"cataimg\" onClick={this.setQuestionDeck} src={require(\"./icons/book.png\")} id=\"books\" alt=\"book\" />\n                        </div>\n                        <h3>Books</h3>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <div className=\"cata\" onClick={this.setQuestionDeck} id=\"animals\">\n                            <img className=\"cataimg\" onClick={this.setQuestionDeck} src={require(\"./icons/animal.png\")} id=\"animals\" alt=\"animal\" />\n                        </div>\n                        <h3>Animals</h3>\n                    </Col>\n                    <Col>\n                        <div className=\"cata\" onClick={this.handleRandomDeck} id=\"random\">\n                            <img className=\"cataimg\" onClick={this.handleRandomDeck} src={require(\"./icons/random.png\")} id=\"random\" alt=\"random\" />\n                        </div>\n                        <h3>Random</h3>\n                    </Col>\n                    <Col>\n                        <div className=\"cata\" onClick={this.setQuestionDeck} id=\"customized\">\n                            <img className=\"cataimg\" onClick={this.setQuestionDeck} src={require(\"./icons/customized.png\")} id=\"customized\" alt=\"customized\" />\n                        </div>\n                        <h3>Custom</h3>\n                    </Col>\n                </Row>\n                <ModalQuestions questionList={this.state.questions} max={this.parentState.numQuestions} />\n                <Button href=\"/Room\" disabled={isEnabled}>Go to Room</Button>\n            </div>\n        );\n    }\n}\n\nclass ModalQuestions extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        modal: false,\n        questionNumber: 0\n      };\n      this.toggle = this.toggle.bind(this);\n      this.nextQuestion = this.nextQuestion.bind(this);\n    }\n\n    // this.props.max is the max number of questions\n    // this.props.questionList is the list of questions to display\n  \n    toggle() {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n    }\n\n    nextQuestion() {\n        console.log(\"did the question number increase?\");\n        console.log(this.state.questionNumber);\n        let num = this.state.questionNumber;\n        this.setState({ questionNumber: num + 1});\n        console.log(this.state.questionNumber);\n    }\n\n    render() {\n        if(this.props.questionList.length !== 0) {\n            const entries = Object.entries(this.props.questionList);\n            let displayQuestion = entries[this.state.questionNumber];\n            let displayQuestionModal = displayQuestion[this.state.questionNumber];\n            let values = Object.values(this.props.questionList);\n            let displayButton = values[this.state.questionNumber];\n            let displayButton1 = displayButton[this.state.questionNumber];\n            let displayButton2 = displayButton[this.state.questionNumber + 1];\n            return (\n                <div>\n                  <Button color=\"danger\" onClick={this.toggle}>{this.props.buttonLabel}</Button>\n                  <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>{displayQuestionModal}</ModalHeader>\n                    <ModalFooter>\n                      <Button color=\"primary\" onClick={this.toggle}>{displayButton1}</Button>{' '}\n                      <Button color=\"primary\" onClick={this.toggle}>{displayButton2}</Button>{' '}\n                      <Button color=\"primary\" onClick={this.nextQuestion}>Next Question</Button>{' '}\n                      <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n                    </ModalFooter>\n                  </Modal>\n                </div>\n            );\n        }\n        return(\n            <div>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <p>Organizer has not posted question yet</p>\n                </Modal>\n            </div>\n        )\n    }\n  }"]},"metadata":{},"sourceType":"module"}