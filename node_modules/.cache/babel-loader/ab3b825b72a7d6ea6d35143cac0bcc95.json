{"ast":null,"code":"var _jsxFileName = \"/Users/lilCheri/Desktop/hw7/src/GameManager.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase/app';\n\nlet uniqid = require('uniqid');\n\nclass GameManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.authUnRegFunc = firebase.auth().onAuthStateChanged(firebaseUser => {\n      if (firebaseUser) {\n        this.setState({\n          user: firebaseUser\n        });\n      } else {\n        this.setState({\n          user: null\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.authUnRegFunc();\n  }\n\n  generateRoomId() {\n    return uniqid();\n  }\n\n  handleCreateRoom(organizer, category, settings) {\n    this.setState({\n      errorMessage: null\n    });\n    let uid = this.generateRoomId();\n    firebase.auth().createUserWithEmailAndPassword(uid + '@whateverdomain.com', uid).then(firebaseUser => {\n      let user = firebase.auth().currentUser;\n      let promise = user.updateProfile({\n        roomId: uid,\n        room_name: \"Room \" + uid,\n        organizer: organizer,\n        category: category,\n        settings: settings\n      });\n      return promise;\n    }).then(() => console.log(\"done\")).catch(error => {\n      this.setState({\n        errorMessage: error.message\n      });\n    });\n    let roomId = this.generateRoomId();\n    let roomRef = firebase.database().ref('Rooms').push();\n    roomRef.set({\n      roomId: roomId,\n      room_name: \"Room \" + roomId,\n      organizer: organizer,\n      category: category,\n      settings: settings\n    });\n  }\n\n  handleJoin(player, id) {}\n\n  render() {\n    // Dummy test\n    this.createRoom(\"Marie\", \"sports\", {\n      Analysis: true,\n      Timer: 60\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Coming Soon!\");\n  }\n\n}\n\nexport default GameManager;","map":{"version":3,"sources":["/Users/lilCheri/Desktop/hw7/src/GameManager.js"],"names":["React","Component","firebase","uniqid","require","GameManager","constructor","props","state","loading","componentDidMount","authUnRegFunc","auth","onAuthStateChanged","firebaseUser","setState","user","componentWillUnmount","generateRoomId","handleCreateRoom","organizer","category","settings","errorMessage","uid","createUserWithEmailAndPassword","then","currentUser","promise","updateProfile","roomId","room_name","console","log","catch","error","message","roomRef","database","ref","push","set","handleJoin","player","id","render","createRoom","Analysis","Timer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,cAArB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAChCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAEAC,EAAAA,iBAAiB,GAAG;AACjB,SAAKC,aAAL,GAAqBT,QAAQ,CAACU,IAAT,GAAgBC,kBAAhB,CAAoCC,YAAD,IAAkB;AACtE,UAAIA,YAAJ,EAAkB;AACd,aAAKC,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAEF;AAAR,SAAd;AACH,OAFD,MAEO;AACH,aAAKC,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAd;AACH;AACJ,KANoB,CAArB;AAOH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnB,SAAKN,aAAL;AACH;;AAEDO,EAAAA,cAAc,GAAG;AACb,WAAOf,MAAM,EAAb;AACH;;AAEDgB,EAAAA,gBAAgB,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,QAAtB,EAAgC;AAC5C,SAAKP,QAAL,CAAc;AAAEQ,MAAAA,YAAY,EAAE;AAAhB,KAAd;AAEA,QAAIC,GAAG,GAAG,KAAKN,cAAL,EAAV;AACAhB,IAAAA,QAAQ,CAACU,IAAT,GAAgBa,8BAAhB,CAA+CD,GAAG,GAAG,qBAArD,EAA4EA,GAA5E,EACKE,IADL,CACWZ,YAAD,IAAkB;AACpB,UAAIE,IAAI,GAAGd,QAAQ,CAACU,IAAT,GAAgBe,WAA3B;AACA,UAAIC,OAAO,GAAGZ,IAAI,CAACa,aAAL,CAAmB;AAC7BC,QAAAA,MAAM,EAAEN,GADqB;AAE7BO,QAAAA,SAAS,EAAE,UAAUP,GAFQ;AAG7BJ,QAAAA,SAAS,EAAEA,SAHkB;AAI7BC,QAAAA,QAAQ,EAAEA,QAJmB;AAK7BC,QAAAA,QAAQ,EAAEA;AALmB,OAAnB,CAAd;AAOA,aAAOM,OAAP;AACH,KAXL,EAYKF,IAZL,CAYU,MAAMM,OAAO,CAACC,GAAR,CAAY,MAAZ,CAZhB,EAaKC,KAbL,CAaYC,KAAD,IAAW;AACd,WAAKpB,QAAL,CAAc;AAAEQ,QAAAA,YAAY,EAAEY,KAAK,CAACC;AAAtB,OAAd;AACH,KAfL;AAkBA,QAAIN,MAAM,GAAG,KAAKZ,cAAL,EAAb;AACA,QAAImB,OAAO,GAAGnC,QAAQ,CAACoC,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,EAAiCC,IAAjC,EAAd;AAEAH,IAAAA,OAAO,CAACI,GAAR,CAAY;AACRX,MAAAA,MAAM,EAAEA,MADA;AAERC,MAAAA,SAAS,EAAE,UAAUD,MAFb;AAGRV,MAAAA,SAAS,EAAEA,SAHH;AAIRC,MAAAA,QAAQ,EAAEA,QAJF;AAKRC,MAAAA,QAAQ,EAAEA;AALF,KAAZ;AAOH;;AAEDoB,EAAAA,UAAU,CAACC,MAAD,EAASC,EAAT,EAAa,CAEtB;;AAEDC,EAAAA,MAAM,GAAG;AACL;AACA,SAAKC,UAAL,CAAgB,OAAhB,EAAyB,QAAzB,EAAmC;AAACC,MAAAA,QAAQ,EAAC,IAAV;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAAnC;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAKH;;AAzE+B;;AA4EpC,eAAe3C,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport firebase from 'firebase/app';\nlet uniqid = require('uniqid');\n\nclass GameManager extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false\n        }\n    }\n\n     componentDidMount() {\n        this.authUnRegFunc = firebase.auth().onAuthStateChanged((firebaseUser) => {\n            if (firebaseUser) {\n                this.setState({ user: firebaseUser});\n            } else {\n                this.setState({ user: null});\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.authUnRegFunc();\n    }\n\n    generateRoomId() {\n        return uniqid();\n    }\n\n    handleCreateRoom(organizer, category, settings) {\n        this.setState({ errorMessage: null });\n\n        let uid = this.generateRoomId()\n        firebase.auth().createUserWithEmailAndPassword(uid + '@whateverdomain.com', uid)\n            .then((firebaseUser) => {\n                let user = firebase.auth().currentUser;\n                let promise = user.updateProfile({\n                    roomId: uid,\n                    room_name: \"Room \" + uid,\n                    organizer: organizer,\n                    category: category,\n                    settings: settings\n                })\n                return promise;\n            })\n            .then(() => console.log(\"done\"))\n            .catch((error) => {\n                this.setState({ errorMessage: error.message });\n            })\n\n\n        let roomId = this.generateRoomId();\n        let roomRef = firebase.database().ref('Rooms').push();\n        \n        roomRef.set({\n            roomId: roomId,\n            room_name: \"Room \" + roomId,\n            organizer: organizer,\n            category: category,\n            settings: settings\n        });\n    }\n\n    handleJoin(player, id) {\n\n    }\n\n    render() {\n        // Dummy test\n        this.createRoom(\"Marie\", \"sports\", {Analysis:true , Timer: 60});\n\n        return(\n            <div>\n                Coming Soon!\n            </div>\n        );\n    }\n}\n\nexport default GameManager;"]},"metadata":{},"sourceType":"module"}