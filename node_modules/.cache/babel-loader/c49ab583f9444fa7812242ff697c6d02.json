{"ast":null,"code":"var _jsxFileName = \"/Users/lilCheri/Desktop/hw7/src/GameManager.js\";\nimport React, { Component } from \"react\";\nimport firebase from \"firebase/app\";\nimport { FormGroup, InputGroup, InputGroupAddon, Input, Label } from \"reactstrap\";\n\nclass GameManager extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = e => {\n      this.setState({\n        [e.target.fname]: e.target.value,\n        [e.target.roomName]: e.target.value,\n        [e.target.numQuestion]: e.target.value,\n        toggleAnalysis: !this.state.toggleAnalysis,\n        toggleRanking: !this.state.toggleRanking,\n        [e.target.timer]: e.target.value\n      });\n    };\n\n    this.state = {\n      fname: \"\",\n      uid: \"\",\n      roomName: \"\",\n      numQuestions: 0,\n      toggleAnalysis: false,\n      toggleRanking: false,\n      timer: 0\n    };\n    this.handleOnChange = this.handleOnChange.bind(this);\n  }\n\n  componentDidMount() {\n    let roomKey = firebase.database.ref(\"Rooms\").push().then(snap => {\n      return snap.key;\n    });\n    this.setState({\n      uid: roomKey,\n      roomName: \"Room-\" + roomKey\n    });\n  }\n\n  handleCreateRoom() {\n    let roomRef = firebase.database().ref(\"Rooms\").child(this.state.uid);\n    roomRef.once('value', function (snapshot) {\n      let snap = snapshot.val();\n\n      if (snap) {\n        roomRef.set({\n          organizer: this.state.fname,\n          uid: this.state.uid,\n          room_name: this.state.roomName,\n          category: this.state.category,\n          settings: {\n            Number_Questions: this.state.roomNamenumQuestions,\n            category: this.state.category,\n            timer: this.state.timer,\n            showAnalysis: this.state.toggleAnalysis,\n            showRanking: this.state.toggleRanking\n          }\n        });\n      } else {\n        alert(\"Error!\");\n      }\n    });\n    return this.props.uid;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.io,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      className: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Organizer Name \"), React.createElement(Input, {\n      placeholder: \"First Name\",\n      name: \"fname\",\n      onChange: this.handleChange,\n      id: \"fname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      className: \"roomName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Custom Room Name\"), React.createElement(Input, {\n      placeholder: this.state.roomName,\n      name: \"roomName\",\n      onChange: this.handleChange,\n      id: \"roomName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"qNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Select number of Icebreaker Questions\"), React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Maximum is 15\",\n      name: \"numQuestion\",\n      min: 0,\n      max: 15,\n      type: \"number\",\n      step: \"1\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(InputGroupAddon, {\n      addonType: \"append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Questions\"))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"checkbox\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), \" Show Analysis\")), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"checkbox\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), \" Show Ranking\")), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Discussion Time (optional)\"), React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Time\",\n      min: 0,\n      max: 60,\n      name: \"timer\",\n      type: \"number\",\n      step: \"1\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(InputGroupAddon, {\n      addonType: \"append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"seconds\")));\n  }\n\n}\n\nexport default GameManager;","map":{"version":3,"sources":["/Users/lilCheri/Desktop/hw7/src/GameManager.js"],"names":["React","Component","firebase","FormGroup","InputGroup","InputGroupAddon","Input","Label","GameManager","constructor","props","handleOnChange","e","setState","target","fname","value","roomName","numQuestion","toggleAnalysis","state","toggleRanking","timer","uid","numQuestions","bind","componentDidMount","roomKey","database","ref","push","then","snap","key","handleCreateRoom","roomRef","child","once","snapshot","val","set","organizer","room_name","category","settings","Number_Questions","roomNamenumQuestions","showAnalysis","showRanking","alert","render","io","handleChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SACIC,SADJ,EAEIC,UAFJ,EAGIC,eAHJ,EAIIC,KAJJ,EAKIC,KALJ,QAMO,YANP;;AAQA,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAClCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiDnBC,cAjDmB,GAiDDC,CAAD,IAAM;AACrB,WAAKC,QAAL,CAAc;AACZ,SAACD,CAAC,CAACE,MAAF,CAASC,KAAV,GAAkBH,CAAC,CAACE,MAAF,CAASE,KADf;AAEZ,SAACJ,CAAC,CAACE,MAAF,CAASG,QAAV,GAAqBL,CAAC,CAACE,MAAF,CAASE,KAFlB;AAGZ,SAACJ,CAAC,CAACE,MAAF,CAASI,WAAV,GAAwBN,CAAC,CAACE,MAAF,CAASE,KAHrB;AAIZG,QAAAA,cAAc,EAAE,CAAC,KAAKC,KAAL,CAAWD,cAJhB;AAKZE,QAAAA,aAAa,EAAE,CAAC,KAAKD,KAAL,CAAWC,aALf;AAMZ,SAACT,CAAC,CAACE,MAAF,CAASQ,KAAV,GAAkBV,CAAC,CAACE,MAAF,CAASE;AANf,OAAd;AAQD,KA1DkB;;AAEjB,SAAKI,KAAL,GAAa;AACXL,MAAAA,KAAK,EAAE,EADI;AAEXQ,MAAAA,GAAG,EAAC,EAFO;AAGXN,MAAAA,QAAQ,EAAE,EAHC;AAIXO,MAAAA,YAAY,EAAE,CAJH;AAKXL,MAAAA,cAAc,EAAE,KALL;AAMXE,MAAAA,aAAa,EAAE,KANJ;AAOXC,MAAAA,KAAK,EAAC;AAPK,KAAb;AASA,SAAKX,cAAL,GAAsB,KAAKA,cAAL,CAAoBc,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,OAAO,GAAGzB,QAAQ,CAAC0B,QAAT,CAAkBC,GAAlB,CAAsB,OAAtB,EAA+BC,IAA/B,GAAsCC,IAAtC,CAA4CC,IAAD,IAAU;AACjE,aAAOA,IAAI,CAACC,GAAZ;AACD,KAFa,CAAd;AAGA,SAAKpB,QAAL,CAAc;AAACU,MAAAA,GAAG,EAAEI,OAAN;AAAeV,MAAAA,QAAQ,EAAE,UAAUU;AAAnC,KAAd;AACD;;AACDO,EAAAA,gBAAgB,GAAG;AACjB,QAAIC,OAAO,GAAGjC,QAAQ,CACnB0B,QADW,GAEXC,GAFW,CAEP,OAFO,EAGXO,KAHW,CAGL,KAAKhB,KAAL,CAAWG,GAHN,CAAd;AAKAY,IAAAA,OAAO,CAACE,IAAR,CAAa,OAAb,EAAsB,UAAUC,QAAV,EAAoB;AACxC,UAAIN,IAAI,GAAGM,QAAQ,CAACC,GAAT,EAAX;;AACA,UAAIP,IAAJ,EAAU;AACRG,QAAAA,OAAO,CAACK,GAAR,CAAY;AACVC,UAAAA,SAAS,EAAE,KAAKrB,KAAL,CAAWL,KADZ;AAEVQ,UAAAA,GAAG,EAAE,KAAKH,KAAL,CAAWG,GAFN;AAGVmB,UAAAA,SAAS,EAAE,KAAKtB,KAAL,CAAWH,QAHZ;AAIV0B,UAAAA,QAAQ,EAAE,KAAKvB,KAAL,CAAWuB,QAJX;AAKVC,UAAAA,QAAQ,EAAE;AACRC,YAAAA,gBAAgB,EAAE,KAAKzB,KAAL,CAAW0B,oBADrB;AAERH,YAAAA,QAAQ,EAAE,KAAKvB,KAAL,CAAWuB,QAFb;AAGRrB,YAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAHV;AAIRyB,YAAAA,YAAY,EAAE,KAAK3B,KAAL,CAAWD,cAJjB;AAKR6B,YAAAA,WAAW,EAAE,KAAK5B,KAAL,CAAWC;AALhB;AALA,SAAZ;AAaD,OAdD,MAcO;AACL4B,QAAAA,KAAK,CAAC,QAAD,CAAL;AACD;AACF,KAnBD;AAoBA,WAAO,KAAKvC,KAAL,CAAWa,GAAlB;AACD;;AAaD2B,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,YAAnB;AAAgC,MAAA,IAAI,EAAC,OAArC;AAA6C,MAAA,QAAQ,EAAE,KAAKC,YAA5D;AAA0E,MAAA,EAAE,EAAC,OAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,EAME,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAE,KAAKhC,KAAL,CAAWH,QAA/B;AAAyC,MAAA,IAAI,EAAC,UAA9C;AAAyD,MAAA,QAAQ,EAAE,KAAKmC,YAAxE;AAAsF,MAAA,EAAE,EAAC,UAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CANF,EAUE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,EAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,WAAW,EAAC,eADd;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,GAAG,EAAE,CAHP;AAIE,MAAA,GAAG,EAAE,EAJP;AAKE,MAAA,IAAI,EAAC,QALP;AAME,MAAA,IAAI,EAAC,GANP;AAOE,MAAA,QAAQ,EAAE,KAAKA,YAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVF,CAFF,CAVF,EAyBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,QAAQ,EAAE,KAAKA,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,mBADF,CAzBF,EA8BE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,QAAQ,EAAE,KAAKA,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,kBADF,CA9BF,EAmCE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAnCF,EAoCE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,WAAW,EAAC,MADd;AAEE,MAAA,GAAG,EAAE,CAFP;AAGE,MAAA,GAAG,EAAE,EAHP;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,IAAI,EAAC,QALP;AAME,MAAA,IAAI,EAAC,GANP;AAOE,MAAA,QAAQ,EAAE,KAAKA,YAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVF,CApCF,CADF;AAmDD;;AAjHiC;;AAoHpC,eAAe5C,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport firebase from \"firebase/app\";\nimport {\n    FormGroup,\n    InputGroup,\n    InputGroupAddon,\n    Input,\n    Label\n} from \"reactstrap\";\n\nclass GameManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fname: \"\",\n      uid:\"\",\n      roomName: \"\",\n      numQuestions: 0,\n      toggleAnalysis: false,\n      toggleRanking: false,\n      timer:0\n    };\n    this.handleOnChange = this.handleOnChange.bind(this);\n  }\n\n  componentDidMount() {\n    let roomKey = firebase.database.ref(\"Rooms\").push().then((snap) => {\n      return snap.key;\n    });\n    this.setState({uid: roomKey, roomName: \"Room-\" + roomKey});\n  }\n  handleCreateRoom() {\n    let roomRef = firebase\n      .database()\n      .ref(\"Rooms\")\n      .child(this.state.uid);\n    \n    roomRef.once('value', function (snapshot) {\n      let snap = snapshot.val();\n      if (snap) {\n        roomRef.set({\n          organizer: this.state.fname,\n          uid: this.state.uid,\n          room_name: this.state.roomName,\n          category: this.state.category,\n          settings: {\n            Number_Questions: this.state.roomNamenumQuestions,\n            category: this.state.category,\n            timer: this.state.timer,\n            showAnalysis: this.state.toggleAnalysis,\n            showRanking: this.state.toggleRanking\n          }\n        });\n      } else {\n        alert(\"Error!\");\n      }\n    });\n    return this.props.uid;\n  }\n\n  handleOnChange = (e) =>{\n    this.setState({\n      [e.target.fname]: e.target.value,\n      [e.target.roomName]: e.target.value,\n      [e.target.numQuestion]: e.target.value,\n      toggleAnalysis: !this.state.toggleAnalysis,\n      toggleRanking: !this.state.toggleRanking,\n      [e.target.timer]: e.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"Settings\">\n        <button onClick={this.io}></button>\n        <FormGroup className=\"userName\">\n          <Label>Organizer Name </Label>\n          <Input placeholder=\"First Name\" name=\"fname\" onChange={this.handleChange} id=\"fname\" />\n        </FormGroup>\n        <FormGroup className=\"roomName\">\n          <Label>Custom Room Name</Label>\n          <Input placeholder={this.state.roomName} name=\"roomName\" onChange={this.handleChange} id=\"roomName\" />\n        </FormGroup>\n        <div className=\"qNumber\">\n          <Label>Select number of Icebreaker Questions</Label>\n          <InputGroup>\n            <Input\n              placeholder=\"Maximum is 15\"\n              name=\"numQuestion\"\n              min={0}\n              max={15}\n              type=\"number\"\n              step=\"1\" \n              onChange={this.handleChange}\n            />\n            <InputGroupAddon addonType=\"append\">Questions</InputGroupAddon>\n          </InputGroup>\n        </div>\n        <FormGroup>\n          <Label check>\n            <Input type=\"checkbox\" onChange={this.handleChange}/> Show Analysis\n          </Label>\n        </FormGroup>\n        <FormGroup>\n          <Label check>\n            <Input type=\"checkbox\" onChange={this.handleChange}/> Show Ranking\n          </Label>\n        </FormGroup>\n        <Label>Discussion Time (optional)</Label>\n        <InputGroup>\n          <Input\n            placeholder=\"Time\"\n            min={0}\n            max={60}\n            name=\"timer\"\n            type=\"number\"\n            step=\"1\"\n            onChange={this.handleChange}\n          />\n          <InputGroupAddon addonType=\"append\">seconds</InputGroupAddon>\n        </InputGroup>\n      </div>\n    );\n  }\n}\n\nexport default GameManager;\n"]},"metadata":{},"sourceType":"module"}