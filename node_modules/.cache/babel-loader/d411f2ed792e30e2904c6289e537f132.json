{"ast":null,"code":"var _jsxFileName = \"/Users/veronicachang/Documents/hw7/src/Analysis.js\";\n// https://canvasjs.com/react-charts/column-chart/\nimport firebase from \"firebase/app\";\n\nvar React = require('react');\n\nvar Component = React.Component;\n\nvar CanvasJSReact = require('./canvasjs.react');\n\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nexport class Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionNumber: 0\n    };\n    this.display = this.display.bind(this);\n  }\n\n  display() {\n    let roomRef = firebase.database().ref(\"Rooms\").child(this.props.uid).child(\"analysis\");\n    console.log(roomRef);\n  }\n\n  render() {\n    let options = {\n      title: {\n        text: \"Basic Column Chart\"\n      },\n      data: [{\n        // Change type to \"doughnut\", \"line\", \"splineArea\", etc.\n        type: \"column\",\n        dataPoints: [{\n          label: \"Apple\",\n          y: 10\n        }, {\n          label: \"Orange\",\n          y: 15\n        }, {\n          label: \"Banana\",\n          y: 25\n        }, {\n          label: \"Mango\",\n          y: 30\n        }, {\n          label: \"Grape\",\n          y: 28\n        }]\n      }]\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: options\n      /* onRef={ref => this.chart = ref} */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\nmodule.exports = Chart;","map":{"version":3,"sources":["/Users/veronicachang/Documents/hw7/src/Analysis.js"],"names":["firebase","React","require","Component","CanvasJSReact","CanvasJS","CanvasJSChart","Chart","constructor","props","state","questionNumber","display","bind","roomRef","database","ref","child","uid","console","log","render","options","title","text","data","type","dataPoints","label","y","module","exports"],"mappings":";AAAA;AACA,OAAOA,QAAP,MAAqB,cAArB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,SAAS,GAAGF,KAAK,CAACE,SAAtB;;AACA,IAAIC,aAAa,GAAGF,OAAO,CAAC,kBAAD,CAA3B;;AACA,IAAIG,QAAQ,GAAGD,aAAa,CAACC,QAA7B;AACA,IAAIC,aAAa,GAAGF,aAAa,CAACE,aAAlC;AAEA,OAAO,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AACjCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE;AADP,KAAb;AAGD,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACF;;AAEDD,EAAAA,OAAO,GAAG;AACN,QAAIE,OAAO,GAAGd,QAAQ,CAACe,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,EAAiCC,KAAjC,CAAuC,KAAKR,KAAL,CAAWS,GAAlD,EAAuDD,KAAvD,CAA6D,UAA7D,CAAd;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACH;;AAIJO,EAAAA,MAAM,GAAG;AACR,QAAIC,OAAO,GAAG;AACbC,MAAAA,KAAK,EAAE;AACNC,QAAAA,IAAI,EAAE;AADA,OADM;AAIbC,MAAAA,IAAI,EAAE,CACN;AACC;AACAC,QAAAA,IAAI,EAAE,QAFP;AAGCC,QAAAA,UAAU,EAAE,CACX;AAAEC,UAAAA,KAAK,EAAE,OAAT;AAAmBC,UAAAA,CAAC,EAAE;AAAtB,SADW,EAEX;AAAED,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,CAAC,EAAE;AAAtB,SAFW,EAGX;AAAED,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,CAAC,EAAE;AAAtB,SAHW,EAIX;AAAED,UAAAA,KAAK,EAAE,OAAT;AAAmBC,UAAAA,CAAC,EAAE;AAAtB,SAJW,EAKX;AAAED,UAAAA,KAAK,EAAE,OAAT;AAAmBC,UAAAA,CAAC,EAAE;AAAtB,SALW;AAHb,OADM;AAJO,KAAd;AAkBA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAIP;AACzB;AADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADA;AAQA;;AA3CmC;AA6CrCQ,MAAM,CAACC,OAAP,GAAiBxB,KAAjB","sourcesContent":["// https://canvasjs.com/react-charts/column-chart/\nimport firebase from \"firebase/app\";\n\nvar React = require('react');\nvar Component = React.Component;\nvar CanvasJSReact = require('./canvasjs.react');\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nexport class Chart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            questionNumber: 0\n        };\n       this.display = this.display.bind(this);\n    }\n\n    display() {\n        let roomRef = firebase.database().ref(\"Rooms\").child(this.props.uid).child(\"analysis\");\n        console.log(roomRef);\n    }\n\n    \n\n\trender() {\n\t\tlet options = {\n\t\t\ttitle: {\n\t\t\t\ttext: \"Basic Column Chart\"\n\t\t\t},\n\t\t\tdata: [\n\t\t\t{\n\t\t\t\t// Change type to \"doughnut\", \"line\", \"splineArea\", etc.\n\t\t\t\ttype: \"column\",\n\t\t\t\tdataPoints: [\n\t\t\t\t\t{ label: \"Apple\",  y: 10  },\n\t\t\t\t\t{ label: \"Orange\", y: 15  },\n\t\t\t\t\t{ label: \"Banana\", y: 25  },\n\t\t\t\t\t{ label: \"Mango\",  y: 30  },\n\t\t\t\t\t{ label: \"Grape\",  y: 28  }\n\t\t\t\t]\n\t\t\t}\n\t\t\t]\n\t\t}\n\t\treturn (\n\t\t<div>\n\t\t\t<CanvasJSChart options = {options}\n\t\t\t\t/* onRef={ref => this.chart = ref} */\n\t\t\t/>\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n\t\t</div>\n\t\t);\n\t}\n}\nmodule.exports = Chart;                              "]},"metadata":{},"sourceType":"module"}